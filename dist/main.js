// Generated by CoffeeScript 2.3.1
(function() {
  var Semantics;

  Semantics = function(language, dictionary) {
    var S, dict, lang;
    lang = (typeof language === "string" ? language : null);
    dict = {};
    if (lang) {
      dict[lang] = {
        values: Object.assign({}, dictionary != null ? dictionary.values : void 0),
        plurals: Object.assign({}, dictionary != null ? dictionary.plurals : void 0)
      };
    }
    S = function() {
      var context, count, f, key;
      if (!(dict != null ? dict[lang] : void 0)) {
        throw Error(`Language \`${lang}\` is not defined.`);
      }
      switch (typeof arguments[0]) {
        case "string":
          [key, ...context] = arguments;
          f = dict[lang].values[key];
          return ((function() {
            switch (typeof f) {
              case "function":
                return f(...context);
              default:
                return f;
            }
          })());
        case "number":
          [count, key, ...context] = arguments;
          f = dict[lang].plurals[key];
          return ((function() {
            switch (typeof f) {
              case "function":
                return f(count, ...context);
              default:
                return f;
            }
          })());
        default:
          throw Error("First argument isn't a string or number.");
      }
    };
    S.setLang = function(l) {
      if (typeof l === "string") {
        return lang = l;
      } else {
        throw Error("Expected language to be of type string.");
      }
    };
    S.addDict = function(lang, dictionary) {
      var ref, ref1;
      if (dict[lang] == null) {
        dict[lang] = {
          values: {},
          plurals: {}
        };
      }
      Object.assign(dict[lang].values, (ref = dictionary != null ? dictionary.values : void 0) != null ? ref : {});
      return Object.assign(dict[lang].plurals, (ref1 = dictionary != null ? dictionary.plurals : void 0) != null ? ref1 : {});
    };
    return S;
  };

  // ========================================
  // Export
  if (this === (typeof window !== "undefined" && window !== null)) {
    // Probably browser
    window["Semantics"] = Semantics;
  } else {
    // Probably node
    module.exports = Semantics;
  }

}).call(this);
